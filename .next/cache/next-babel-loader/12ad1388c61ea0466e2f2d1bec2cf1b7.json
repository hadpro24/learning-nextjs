{"ast":null,"code":"var _jsxFileName = \"/home/harouna/codes/dev/learn/hello-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link'; // import fetch from \"isomorphic-unfetch\";\n\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  var _useSWR = useSWR('/api/randomQuote', fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  var author = data === null || data === void 0 ? void 0 : data.author;\n  var quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch quote.';\n  return __jsx(\"main\", {\n    className: \"jsx-1236022937\" + \" \" + \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1236022937\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-1236022937\" + \" \" + \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 18\n    }\n  }, \" - \", author), __jsx(_JSXStyle, {\n    id: \"1236022937\",\n    __self: this\n  }, \"main.jsx-1236022937{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-1236022937{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-1236022937{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2hhcm91bmEvY29kZXMvZGV2L2xlYXJuL2hlbGxvLW5leHQvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUJrQixBQUdxQixBQU1VLEFBTUcsVUFYUCxVQU1GLEdBTUEsR0FYSSxRQU1ILEdBTUEsT0FYRyxLQU1FLEdBTXRCLFVBWEEsT0FNQSIsImZpbGUiOiIvaG9tZS9oYXJvdW5hL2NvZGVzL2Rldi9sZWFybi9oZWxsby1uZXh0L3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG4vLyBpbXBvcnQgZmV0Y2ggZnJvbSBcImlzb21vcnBoaWMtdW5mZXRjaFwiO1xuaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InO1xuXG5mdW5jdGlvbiBmZXRjaGVyKHVybCl7XG4gIHJldHVybiBmZXRjaCh1cmwpLnRoZW4ociA9PiByLmpzb24oKSk7XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKXtcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gdXNlU1dSKCcvYXBpL3JhbmRvbVF1b3RlJywgZmV0Y2hlcik7XG5cbiAgY29uc3QgYXV0aG9yID0gZGF0YT8uYXV0aG9yO1xuICBsZXQgcXVvdGUgPSBkYXRhPy5xdW90ZTtcblxuICBpZighZGF0YSkgcXVvdGUgPSAnTG9hZGluZy4uLic7XG4gIGlmKGVycm9yKSBxdW90ZSA9ICdGYWlsZWQgdG8gZmV0Y2ggcXVvdGUuJztcblxuICByZXR1cm4gKFxuICAgIDxtYWluIGNsYXNzTmFtZT1cImNlbnRlclwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJxdW90ZVwiPntxdW90ZX08L2Rpdj5cbiAgICAgIHthdXRob3IgJiYgPHNwYW4gY2xhc3NOYW1lPVwiYXV0aG9yXCI+IC0ge2F1dGhvcn08L3NwYW4+fVxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBtYWluIHtcbiAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgIG1heC13aWR0aDogOTAwcHg7XG4gICAgICAgICAgbWFyZ2luOiAzMDBweCBhdXRvO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgICAucXVvdGUge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiBjdXJzaXZlO1xuICAgICAgICAgIGNvbG9yOiAjZTI0M2RlO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgICAgICAgfVxuICAgICAgICAuYXV0aG9yIHtcbiAgICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICAgICAgICBjb2xvcjogIzU1OTgzNDtcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L21haW4+XG5cbiAgKTtcbn1cblxuLy8gZnVuY3Rpb24gZ2V0UG9zdHMoKXtcbi8vICAgcmV0dXJuIFtcbi8vICAgICB7IGlkIDogJ2hlbGxvLW5leHRqcycsIHRpdGxlOiAnSGVsbG8gTmV4dC5qcyd9LFxuLy8gICAgIHsgaWQ6ICdsZWFybi1uZXh0anMnLCB0aXRsZTogJ0xlYXJuIE5leHQuanMgaXMgYXdlc29tZScgfSxcbi8vICAgICB7IGlkOiAnZGVwbG95LW5leHRqcycsIHRpdGxlOiAnRGVwbG95IGFwcHMgd2l0aCBaRUlUJyB9XG4vLyAgIF1cbi8vIH1cbi8vXG4vLyBjb25zdCBQb3N0TGluayA9ICh7IHBvc3QgfSkgPT4gKFxuLy8gICA8bGkga2V5PXtwb3N0LmlkfT5cbi8vICAgICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Bvc3QuaWR9YH0+XG4vLyAgICAgICAgICAgICA8YT57cG9zdC50aXRsZX08L2E+XG4vLyAgICAgICA8L0xpbms+XG4vLyAgICAgICA8c3R5bGUganN4PntgXG4vLyAgICAgICAgIGxpe1xuLy8gICAgICAgICAgIGxpc3Qtc3R5bGU6bm9uZTtcbi8vICAgICAgICAgICBtYXJnaW46NXB4IDA7XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgYXtcbi8vICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246bm9uZTtcbi8vICAgICAgICAgICBjb2xvcjpibHVlO1xuLy8gICAgICAgICB9XG4vLyAgICAgICAgIGE6aG92ZXJ7XG4vLyAgICAgICAgICAgb3BhY2l0eTowLjY7XG4vLyAgICAgICAgIH1cbi8vICAgICAgIGB9PC9zdHlsZT5cbi8vICAgPC9saT5cbi8vIClcbi8vXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCbG9nKCl7XG4vLyAgIHJldHVybiAoXG4vLyAgICAgICA8TGF5b3V0PlxuLy8gICAgICAgICA8aDE+TXkgQmxvZzwvaDE+XG4vLyAgICAgICAgIDx1bD5cbi8vICAgICAgICAgICAgIHtnZXRQb3N0cygpLm1hcChwb3N0ID0+IChcbi8vICAgICAgICAgICAgICAgPFBvc3RMaW5rIGtleT17cG9zdC5pZH0gcG9zdD17cG9zdH0gLz5cbi8vICAgICAgICAgICAgICkpfVxuLy8gICAgICAgICA8L3VsPlxuLy8gICAgICAgICA8c3R5bGUganN4PntgXG4vLyAgICAgICAgICAgICBoMSwgYXtcbi8vICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICB1bHtcbi8vICAgICAgICAgICAgICAgcGFkZGluZzowO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICBgfTwvc3R5bGU+XG4vLyAgICAgICA8L0xheW91dD5cbi8vICAgKTtcbi8vIH1cblxuLy8gY29uc3QgSW5kZXggPSBwcm9wcyA9PiAoXG4vLyAgICAgPExheW91dD5cbi8vICAgICAgICAgPGgxPkJhdG1hbiBUViBTaG93czwvaDE+XG4vLyAgICAgICAgIHtwcm9wcy5zaG93cy5tYXAoc2hvdyA9PiAoXG4vLyAgICAgICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbi8vICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtzaG93LmlkfWB9PlxuLy8gICAgICAgICAgICAgICAgICAgICA8YT57c2hvdy5uYW1lfTwvYT5cbi8vICAgICAgICAgICAgICAgICA8L0xpbms+XG4vLyAgICAgICAgICAgICA8L2xpPlxuLy9cbi8vICAgICAgICAgKSl9XG4vLyAgICAgPC9MYXlvdXQ+XG4vLyApO1xuLy9cbi8vIEluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCl7XG4vLyAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJyk7XG4vLyAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4vL1xuLy8gICAgIGNvbnNvbGUubG9nKGBTb3cgZGF0YSBmZXRjaCBjb3VudC4gJHtkYXRhLmxlbmd0aH1gKTtcbi8vICAgICByZXR1cm4ge1xuLy8gICAgICAgICBzaG93czogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkuc2hvdylcbi8vICAgICB9O1xuLy8gfVxuLy9cbi8vIGV4cG9ydCBkZWZhdWx0IEluZGV4O1xuIl19 */\\n/*@ sourceURL=/home/harouna/codes/dev/learn/hello-next/pages/index.js */\"));\n} // function getPosts(){\n//   return [\n//     { id : 'hello-nextjs', title: 'Hello Next.js'},\n//     { id: 'learn-nextjs', title: 'Learn Next.js is awesome' },\n//     { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT' }\n//   ]\n// }\n//\n// const PostLink = ({ post }) => (\n//   <li key={post.id}>\n//       <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n//             <a>{post.title}</a>\n//       </Link>\n//       <style jsx>{`\n//         li{\n//           list-style:none;\n//           margin:5px 0;\n//         }\n//         a{\n//           text-decoration:none;\n//           color:blue;\n//         }\n//         a:hover{\n//           opacity:0.6;\n//         }\n//       `}</style>\n//   </li>\n// )\n//\n// export default function Blog(){\n//   return (\n//       <Layout>\n//         <h1>My Blog</h1>\n//         <ul>\n//             {getPosts().map(post => (\n//               <PostLink key={post.id} post={post} />\n//             ))}\n//         </ul>\n//         <style jsx>{`\n//             h1, a{\n//               font-family: 'Arial';\n//             }\n//             ul{\n//               padding:0;\n//             }\n//         `}</style>\n//       </Layout>\n//   );\n// }\n// const Index = props => (\n//     <Layout>\n//         <h1>Batman TV Shows</h1>\n//         {props.shows.map(show => (\n//             <li key={show.id}>\n//                 <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                     <a>{show.name}</a>\n//                 </Link>\n//             </li>\n//\n//         ))}\n//     </Layout>\n// );\n//\n// Index.getInitialProps = async function(){\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n//\n//     console.log(`Sow data fetch count. ${data.length}`);\n//     return {\n//         shows: data.map(entry => entry.show)\n//     };\n// }\n//\n// export default Index;","map":{"version":3,"sources":["/home/harouna/codes/dev/learn/hello-next/pages/index.js"],"names":["Layout","Link","useSWR","fetcher","url","fetch","then","r","json","Index","data","error","author","quote"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAqB;AACnB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACD;;AAGD,eAAe,SAASC,KAAT,GAAgB;AAAA,gBACLP,MAAM,CAAC,kBAAD,EAAqBC,OAArB,CADD;AAAA,MACrBO,IADqB,WACrBA,IADqB;AAAA,MACfC,KADe,WACfA,KADe;;AAG7B,MAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAIC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAAlB;AAEA,MAAG,CAACH,IAAJ,EAAUG,KAAK,GAAG,YAAR;AACV,MAAGF,KAAH,EAAUE,KAAK,GAAG,wBAAR;AAEV,SACE;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEGD,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BA,MAA7B,CAFb;AAAA;AAAA;AAAA,+rJADF;AA0BD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\n// import fetch from \"isomorphic-unfetch\";\nimport useSWR from 'swr';\n\nfunction fetcher(url){\n  return fetch(url).then(r => r.json());\n}\n\n\nexport default function Index(){\n  const { data, error } = useSWR('/api/randomQuote', fetcher);\n\n  const author = data?.author;\n  let quote = data?.quote;\n\n  if(!data) quote = 'Loading...';\n  if(error) quote = 'Failed to fetch quote.';\n\n  return (\n    <main className=\"center\">\n      <div className=\"quote\">{quote}</div>\n      {author && <span className=\"author\"> - {author}</span>}\n      <style jsx>{`\n        main {\n          width: 90%;\n          max-width: 900px;\n          margin: 300px auto;\n          text-align: center;\n        }\n        .quote {\n          font-family: cursive;\n          color: #e243de;\n          font-size: 24px;\n          padding-bottom: 10px;\n        }\n        .author {\n          font-family: sans-serif;\n          color: #559834;\n          font-size: 20px;\n        }\n      `}</style>\n    </main>\n\n  );\n}\n\n// function getPosts(){\n//   return [\n//     { id : 'hello-nextjs', title: 'Hello Next.js'},\n//     { id: 'learn-nextjs', title: 'Learn Next.js is awesome' },\n//     { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT' }\n//   ]\n// }\n//\n// const PostLink = ({ post }) => (\n//   <li key={post.id}>\n//       <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n//             <a>{post.title}</a>\n//       </Link>\n//       <style jsx>{`\n//         li{\n//           list-style:none;\n//           margin:5px 0;\n//         }\n//         a{\n//           text-decoration:none;\n//           color:blue;\n//         }\n//         a:hover{\n//           opacity:0.6;\n//         }\n//       `}</style>\n//   </li>\n// )\n//\n// export default function Blog(){\n//   return (\n//       <Layout>\n//         <h1>My Blog</h1>\n//         <ul>\n//             {getPosts().map(post => (\n//               <PostLink key={post.id} post={post} />\n//             ))}\n//         </ul>\n//         <style jsx>{`\n//             h1, a{\n//               font-family: 'Arial';\n//             }\n//             ul{\n//               padding:0;\n//             }\n//         `}</style>\n//       </Layout>\n//   );\n// }\n\n// const Index = props => (\n//     <Layout>\n//         <h1>Batman TV Shows</h1>\n//         {props.shows.map(show => (\n//             <li key={show.id}>\n//                 <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                     <a>{show.name}</a>\n//                 </Link>\n//             </li>\n//\n//         ))}\n//     </Layout>\n// );\n//\n// Index.getInitialProps = async function(){\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n//\n//     console.log(`Sow data fetch count. ${data.length}`);\n//     return {\n//         shows: data.map(entry => entry.show)\n//     };\n// }\n//\n// export default Index;\n"]},"metadata":{},"sourceType":"module"}